require(["jquery","XWikiAsyncNotificationsMacro","xwiki-meta"],function(a,l,h){var k=-1,m=(new XWiki.Document(XWiki.Model.resolve("XWiki.Notifications.Code.NotificationsDisplayerUIX",XWiki.EntityType.DOCUMENT))).getURL("get"),f=function(d){var b=a(".notifications-count");k=d;0==d?b.remove():(0==b.length&&(b=a("\x3cspan\x3e").addClass("notifications-count badge"),a("#tmNotifications \x3e button.dropdown-toggle").append(b)),b.text(d),20<d&&b.text("20+"))},r=function(d){if(!(0<a(".notifications-header-uix").find("a.notification-event-clean").length)){var b=
a('\x3ca href\x3d"#"\x3e').addClass("notification-event-clean").html("\x3cspan class\x3d\"fa fa-trash\" aria-hidden\x3d'true'\x3e\x3c/span\x3e\x26nbsp;Clear All").on("click",function(c){c.preventDefault();new XWiki.widgets.ConfirmationBox({onYes:function(e){e.stopPropagation();var g=new XWiki.widgets.Notification("Clearing the notifications","inprogress");a.post(m,{outputSyntax:"plain",action:"clear",date:d}).then(()=>{g.hide();new XWiki.widgets.Notification("Notifications have been cleared","done");
a(".notifications-area").html(a("\x3cp\x3e").addClass("text-center noitems").text("No notifications available!"));f(0)})},onNo:function(e){e.stopPropagation()}})});a(".notifications-header-uix").append(b)}},p=function(d){var b={userId:XWiki.Model.serialize(h.userReference),useUserPreferences:!0,currentWiki:h.documentReference.extractReferenceValue(XWiki.EntityType.WIKI),async:!0};d&&(b.asyncId=d);a.ajax("/xwiki/rest/notifications/count?media\x3djson",{cache:!1,data:b}).done(function(c,e,g){switch(g.status){case 200:f(c.unread);
break;case 202:setTimeout(p,1E3,c.asyncId)}})};a(function(){var d=a(".notification-uix");p();d.on("eventMarkedAsRead",function(e){20>=k&&f(k-1)});a("#tmNotifications .dropdown-menu").on("click",function(e){e.stopPropagation()});(new MutationObserver(function(e){for(var g=0;g<e.length;g++)for(var q=e[g],n=0;n<q.addedNodes.length;n++){var t=q.addedNodes[n];a(t).hasClass("notification-event")&&r();a(t).hasClass("notifications-count")&&f(a(t).text())}})).observe(document,{childList:!0,subtree:!0});var b=
!1,c=h.documentReference.toString();a("#tmNotifications").on("show.bs.dropdown",function(){b||a.post(m,{outputSyntax:"html",action:"getNotifications",document:c}).then(e=>{a(".notification-uix").html(e).removeClass("loading");a(".notification-uix").find(".notifications-macro").each(function(){new l(this)});a(document).trigger("xwiki:notification:loaded")});b=!0})})});
require(["jquery","xwiki-meta","xwiki-bootstrap-switch"],function(a,l){a(document).on("xwiki:notification:loaded",function(){var h=a("#notificationWiki"),k=a("#notificationPageAndChildren"),m=a("#notificationPageOnly"),f=a([h,k,m]);m.bootstrapSwitch("labelText","\x3cspan class\x3d\"fa fa-file-o\" aria-hidden\x3d'true'\x3e\x3c/span\x3e");k.bootstrapSwitch("labelText","\x3cspan class\x3d\"fa fa-sitemap\" aria-hidden\x3d'true'\x3e\x3c/span\x3e");h.bootstrapSwitch("labelText","\x3cspan class\x3d\"fa fa-globe\" aria-hidden\x3d'true'\x3e\x3c/span\x3e");
if("false"==a(".notifications-toggles").attr("data-enabled"))f.bootstrapSwitch("disabled",!0),a(".notifications-toggles").tooltip({title:"You need to enable notifications in your settings if you wish to watch these locations",placement:"bottom"});else{a(".bootstrap-switch-id-notificationPageOnly").tooltip({title:"Watch this page",placement:"bottom"});var r="Watch this page and its children";"WebHome"!=l.documentReference.name&&(r="Watch the parent page and its children");a(".bootstrap-switch-id-notificationPageAndChildren").tooltip({title:r,
placement:"bottom"});a(".bootstrap-switch-id-notificationWiki").tooltip({title:"Watch this wiki",placement:"bottom"})}f.bootstrapSwitch("size","small");var p=function(b,c){"WATCHED_FOR_ALL_EVENTS_AND_FORMATS"===c?b.bootstrapSwitch("state",!0,!0):"WATCHED_FOR_SOME_EVENTS_OR_FORMATS"===c?b.bootstrapSwitch("indeterminate",!0):b.bootstrapSwitch("state",!1,!0)},d=function(b,c,e){f.bootstrapSwitch("disabled",!0);var g=(new XWiki.Document(XWiki.Model.resolve("XWiki.Notifications.Code.NotificationsDisplayerUIX",
XWiki.EntityType.DOCUMENT))).getURL("get","outputSyntax\x3dplain"),q=new XWiki.widgets.Notification("Your settings are being saved...","inprogress");a.post(g,{action:b,location:c,type:e,currentDoc:XWiki.Model.serialize(l.documentReference)}).then(n=>{f.bootstrapSwitch("disabled",!1);p(m,n.document);p(k,n.space);p(h,n.wiki);q.replace(new XWiki.widgets.Notification("Saved!","done"))}).catch(()=>{q.replace(new XWiki.widgets.Notification("Failed to change the status of the notifications.","error"));f.bootstrapSwitch("disabled",
!1)})};m.bootstrapSwitch("onSwitchChange",function(b,c){d(c?"watchLocation":"unwatchLocation",XWiki.Model.serialize(l.documentReference),"document")});k.bootstrapSwitch("onSwitchChange",function(b,c){d(c?"watchLocation":"unwatchLocation",XWiki.Model.serialize(l.documentReference.extractReference(XWiki.EntityType.SPACE)),"space")});h.bootstrapSwitch("onSwitchChange",function(b,c){d(c?"watchLocation":"unwatchLocation",XWiki.Model.serialize(l.documentReference.extractReference(XWiki.EntityType.WIKI)),
"wiki")});a(".notifications-toggles .bootstrap-switch").on("click",function(b){b.stopImmediatePropagation()})})});